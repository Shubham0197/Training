$ git --version
git version 2.35.1.windows.2
#Find the version of the git installed in the system
-----------------------------------------------------------------------------------------------------
Working with Git
Initialize Git on a folder, making it a Repository
Git now creates a hidden folder to keep track of changes in that folder
When a file is changed, added or deleted, it is considered modified
You select the modified files you want to Stage
The Staged files are Committed, which prompts Git to store a permanent snapshot of the files
Git allows you to see the full history of every commit.
You can revert back to any previous commit.
Git does not store a separate copy of every file in every commit, but keeps track of changes made in each commit!
-----------------------------------------------------------------------------------------------------


$ git config --global user.name "Shubham Jain"
$ git config --global user.email "shubhamjain0197@gmail.com"
 
 : purpose - Add User and Id for whom the git is being used by locally
----------------------------------------------------------------------------------------------------- 
ssh-keygen -t rsa -b 4096 -C "shubhamjain0197@gmail.com"
Enter file in which to save the key (/c/Users/shubh/.ssh/id_rsa):

:Purpose- Create SSh key to authenticate the user to Global Repo.

$ ssh-keygen -t rsa -b 4096 -C "shubhamjain0197@gmail.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/shubh/.ssh/id_rsa):
Created directory '/c/Users/shubh/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/shubh/.ssh/id_rsa
Your public key has been saved in /c/Users/shubh/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:DHGwNsbJVm23j7lUcvoZO28zlU5KwW+NVt7GiV80bjA shubhamjain0197@gmail.com
The key's randomart image is:
+---[RSA 4096]----+
|      o.o.       |
|     o *  o .    |
|      @  . ...   |
|     + +    oEo.o|
|        S    OB**|
|            =o=OO|
|           ..+B=o|
|            ..==.|
|               ++|
+----[SHA256]-----+

$ eval "$(ssh-agent -s)"
Agent pid 1483


ssh-add -K /c/Users/shubh/.ssh/id_rsa

$ ssh-add -K /c/Users/shubh/.ssh/id_rsa
Enter PIN for authenticator:
-----------------------------------------------------------------------------------------------------
git archive --format=tar HEAD

git archive --output=./example_repo_archive.tar --format=tar HEAD
-----------------------------------------------------------------------------------------------------
$ git remote add origin https://github.com/Shubham0197/Training.git  :Purpose- Add remote Repo to the local Rel machine and connect it.
-----------------------------------------------------------------------------------------------------
shubh@HOME MINGW64 ~/Desktop/office
$ touch README.md    :Purpose- To create a README file for the repository

shubh@HOME MINGW64 ~/Desktop/office
$ git init  :Purpose- Initialized empty Git repository in C:/Users/shubh/Desktop/Office/.git/
-----------------------------------------------------------------------------------------------------------
$ git status   #what is in the diffrent areas of repo
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        PasswordCheatSheet-200227-164354.pdf
        PhishingCheatSheet-200227-164243.pdf
        README.md
        Records - (Shubham Jain).xlsx
        Screenshot (27).png
        Screenshot 2022-03-14 232114.png
        Screenshot 2022-03-15 004028.png
        Screenshot 2022-03-15 010331.png
        Screenshot 2022-03-15 010829.png
        new.txt

nothing added to commit but untracked files present (use "git add" to track)
-------------------------------------------------------------------------------------------------------------------------
$ git add .  
# Adds all the files in the local repository and stages them for commit
-----------------------------------------------------------------------------------------------------
$ git commit -m "First commit"     :Purpose- to commit files you added to your git repo
-----------------------------------------------------------------------------------------------------
$ git log  :Purpose- to see the history of commit you made to your files
-----------------------------------------------------------------------------------------------------

Git Branches
Branches allow you to work on different parts of a project without impacting the main branch.
When the work is complete, a branch can be merged with the main project.

$ git branch b1
$ git branch
  b1
* master

$ git checkout b1
Switched to branch 'b1'

----------------------------------------------------------------------------------------------------
Git Merge  merge branches
$ git merge b1
Updating 307013f..c31bf7b
Fast-forward
 new.txt | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)


$ git push -u origin master # pushes changes to origin
-----------------------------------------------------------------------------------------------------
$ git status   :Purpose-Lists all new or modified files to be committed

-----------------------------------------------------------------------------------------------------
$ git fetch   :Purpose-used to get files from the remote repository to the local repository but not into the working directory
$ git fetch origin
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 647 bytes | 58.00 KiB/s, done.
From https://github.com/Shubham0197/LocalPush
   c31bf7b..288dedd  master     -> origin/master
-----------------------------------------------------------------------------------------------------
$ git merge :Purpose- It is a command used to get the files from the local repository into the working directory.
-----------------------------------------------------------------------------------------------------
$ git pull  :Purpose-it is a command used to get files from the remote repository directly into the working directory.
-----------------------------------------------------------------------------------------------------
$ git reset HEAD~1  :Purpose- Remove the most recent commit
-----------------------------------------------------------------------------------------------------
$ git remote add origin remote_repository_URL  :Purpose- sets the new remote
-----------------------------------------------------------------------------------------------------
$ git push -u origin master :Purpose- pushes changes to origin
-----------------------------------------------------------------------------------------------------
$ git diff :Purpose- To show the files changes not yet staged
-----------------------------------------------------------------------------------------------------

