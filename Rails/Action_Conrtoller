Action Controller Overview
Controller is C in MVC.
It is an interface between models and view
After the router has determined which controller to use for a request, the controller is responsible for making sense of the request and producing the appropriate output

# Controller Naming Convention
While naming controller rails favours plural in last word of  controllers name ,  although it is not strictly required
ClientsController is preferable to ClientController, SiteAdminsController is preferable to SiteAdminController or SitesAdminsController
Using this will allow to use the default route generators (e.g. resources, etc) without needing to qualify each :path or :controller.

3. Methods and Actions
A controller is a Ruby class which inherits from ApplicationController and has methods just like any other class. 
When your application receives a request, the routing will determine which controller and action to run, then Rails creates an instance of that controller and runs the method with the same name as the action.
Rails creates instance of the controller and calls the method which is action which gives its instance variable shown to its view
Only public methods are callable as actions. 
It is a best practice to lower the visibility of methods (with private or protected) which are not intended to be actions, like auxiliary methods or filters.

4 Parameters
To access the parameters sent by the user in controller
two kinds of parameters possible in a web application.

The first are parameters that are sent as part of the URL, called query string parameters
The query string is everything after "?" in the URL.  
